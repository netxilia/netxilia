/*******************************************************************************
 * 
 * Copyright 2010 Alexandru Craciun, and individual contributors as indicated
 * by the @authors tag. 
 * 
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 3 of
 * the License, or (at your option) any later version.
 * 
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
 ******************************************************************************/
/* Generated By:JJTree: Do not edit this line. ASTNxString.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package org.netxilia.spi.impl.formula.parser;

import org.netxilia.api.formula.IFormulaContext;
import org.netxilia.api.formula.IFormulaRenderer;
import org.netxilia.api.value.IGenericValue;
import org.netxilia.api.value.StringValue;

/**
 * An AST node holding a parsed string.
 */
public class ASTPrimitiveString extends ASTBaseNode {
	private StringValue string;

	public ASTPrimitiveString(int id) {
		super(id);
	}

	public ASTPrimitiveString(FormulaParser p, int id) {
		super(p, id);
	}

	public void setString(String value) {
		// keep the string, without first and last "
		String v = value.substring(1, value.length() - 1);
		// remove duplicate, escaped "
		v = v.replaceAll("\"\"", "\"");
		this.string = new StringValue(v);
	}

	@Override
	public IGenericValue eval(IFormulaContext context) {
		return string;
	}

	@Override
	public String text(IFormulaRenderer context) {
		StringBuilder sb = new StringBuilder("\"");
		String v = string.getStringValue();
		// escape "
		v = v.replaceAll("\"", "\"\"");
		// put a " before and after the string
		sb.append(v).append("\"");
		return sb.toString();
	}

	@Override
	public String toString() {
		return "PrimitiveString[" + string + "]";
	}
}
/*
 * JavaCC - OriginalChecksum=2ac4b042ddc11d957c3193cfc80b0352 (do not edit this line)
 */
